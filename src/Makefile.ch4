#CC=mpicc 
CC=h5pcc 
CFLAGS= -Wall -O3 -g -std=c11 # -Warray-bounds -pg #-g  
LFLAGS= -lm -lhdf5 
SOURCES= parallel.c grid.c parameters.c lb.c boundary_conditions.c initial_conditions.c fluid.c forcing.c output.c output_h5.c melting.c lagrange.c random.c les.c gradients.c polymer.c euler_particle.c lagrange_feedback.c
OBJECTS=$(SOURCES:.c=.o)
HEADERS= common_object.h common_main.h typedef.h functions.h define.h
MYFLAGS= -DNO_XMLHEADERS 
UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Linux)
     OSFLAGS = -D SYSTEM_LINUX
endif
ifeq ($(UNAME_S),Darwin)
     OSFLAGS = -D SYSTEM_OSX
endif
EXECUTABLE= ch4

%.o: %.c $(HEADERS)
	python3 define.py
	$(CC) -c $(CFLAGS) $(MYFLAGS) $(OSFLAGS) $< -o $@ 

$(EXECUTABLE):  main.c $(OBJECTS) $(HEADERS)
	$(CC) $(CFLAGS) $(MYFLAGS) $(OSFLAGS) -o $(EXECUTABLE) main.c $(OBJECTS) $(LFLAGS)

clean:
	rm -rf ./*.o ./*~ $(EXECUTABLE) ./*.dat ./*.out ./RUN  ./*.h5

clean-dat:
	rm -rf ./*.dat

clean-RUN:
	rm -rf ./RUN

clean-h5:
	rm -rf ./*.h5

tar:
	tar cvzf ch4-project_backup.tgz ./*.c ./*.h Makefile* ./*.in  ./python/*.py 
